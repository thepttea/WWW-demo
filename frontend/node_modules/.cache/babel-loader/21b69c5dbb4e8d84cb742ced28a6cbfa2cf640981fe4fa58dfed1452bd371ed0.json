{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/WWW-Demo/frontend/src/components/ParameterPanel.tsx\";\nimport React from 'react';\nimport { Card, InputNumber, Typography } from 'antd';\nimport './ParameterPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst ParameterPanel = ({\n  parameters,\n  onParameterChange\n}) => {\n  const parameterConfigs = [{\n    key: 'agents',\n    label: 'Number of Agents',\n    value: parameters.agents,\n    min: 1,\n    max: 1000\n  }, {\n    key: 'interactionProbability',\n    label: 'Probability of Interaction',\n    value: parameters.interactionProbability,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'positiveResponseProbability',\n    label: 'Probability of Positive Response',\n    value: parameters.positiveResponseProbability,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'negativeResponseProbability',\n    label: 'Probability of Negative Response',\n    value: parameters.negativeResponseProbability,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'neutralResponseProbability',\n    label: 'Probability of Neutral Response',\n    value: parameters.neutralResponseProbability,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'initialPositiveSentiment',\n    label: 'Initial Positive Sentiment',\n    value: parameters.initialPositiveSentiment,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'initialNegativeSentiment',\n    label: 'Initial Negative Sentiment',\n    value: parameters.initialNegativeSentiment,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }, {\n    key: 'initialNeutralSentiment',\n    label: 'Initial Neutral Sentiment',\n    value: parameters.initialNeutralSentiment,\n    min: 0,\n    max: 1,\n    step: 0.1\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"parameter-panel glassmorphism\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      className: \"panel-title\",\n      children: \"Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parameters-container\",\n      children: [parameterConfigs.map(config => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parameter-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"parameter-label\",\n          children: config.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputNumber, {\n          className: \"parameter-input\",\n          value: config.value,\n          onChange: value => onParameterChange(config.key, value || 0),\n          min: config.min,\n          max: config.max,\n          step: config.step,\n          precision: config.step ? 1 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, config.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategy-notice\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"PR strategy will be generated via the LLM chat on the right.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c = ParameterPanel;\nexport default ParameterPanel;\nvar _c;\n$RefreshReg$(_c, \"ParameterPanel\");","map":{"version":3,"names":["React","Card","InputNumber","Typography","jsxDEV","_jsxDEV","Title","ParameterPanel","parameters","onParameterChange","parameterConfigs","key","label","value","agents","min","max","interactionProbability","step","positiveResponseProbability","negativeResponseProbability","neutralResponseProbability","initialPositiveSentiment","initialNegativeSentiment","initialNeutralSentiment","className","children","level","fileName","_jsxFileName","lineNumber","columnNumber","map","config","onChange","precision","_c","$RefreshReg$"],"sources":["/Users/bruce/WWW-Demo/frontend/src/components/ParameterPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, InputNumber, Typography } from 'antd';\nimport { SimulationParameters } from '../types';\nimport './ParameterPanel.css';\n\nconst { Title } = Typography;\n\ninterface ParameterPanelProps {\n  parameters: SimulationParameters;\n  onParameterChange: (key: keyof SimulationParameters, value: number) => void;\n}\n\nconst ParameterPanel: React.FC<ParameterPanelProps> = ({\n  parameters,\n  onParameterChange,\n}) => {\n  const parameterConfigs = [\n    {\n      key: 'agents' as keyof SimulationParameters,\n      label: 'Number of Agents',\n      value: parameters.agents,\n      min: 1,\n      max: 1000,\n    },\n    {\n      key: 'interactionProbability' as keyof SimulationParameters,\n      label: 'Probability of Interaction',\n      value: parameters.interactionProbability,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'positiveResponseProbability' as keyof SimulationParameters,\n      label: 'Probability of Positive Response',\n      value: parameters.positiveResponseProbability,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'negativeResponseProbability' as keyof SimulationParameters,\n      label: 'Probability of Negative Response',\n      value: parameters.negativeResponseProbability,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'neutralResponseProbability' as keyof SimulationParameters,\n      label: 'Probability of Neutral Response',\n      value: parameters.neutralResponseProbability,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'initialPositiveSentiment' as keyof SimulationParameters,\n      label: 'Initial Positive Sentiment',\n      value: parameters.initialPositiveSentiment,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'initialNegativeSentiment' as keyof SimulationParameters,\n      label: 'Initial Negative Sentiment',\n      value: parameters.initialNegativeSentiment,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n    {\n      key: 'initialNeutralSentiment' as keyof SimulationParameters,\n      label: 'Initial Neutral Sentiment',\n      value: parameters.initialNeutralSentiment,\n      min: 0,\n      max: 1,\n      step: 0.1,\n    },\n  ];\n\n  return (\n    <Card className=\"parameter-panel glassmorphism\">\n      <Title level={2} className=\"panel-title\">Configuration</Title>\n      \n      <div className=\"parameters-container\">\n        {parameterConfigs.map((config) => (\n          <div key={config.key} className=\"parameter-item\">\n            <label className=\"parameter-label\">{config.label}</label>\n            <InputNumber\n              className=\"parameter-input\"\n              value={config.value}\n              onChange={(value) => onParameterChange(config.key, value || 0)}\n              min={config.min}\n              max={config.max}\n              step={config.step}\n              precision={config.step ? 1 : 0}\n            />\n          </div>\n        ))}\n        \n        <div className=\"strategy-notice\">\n          <p>PR strategy will be generated via the LLM chat on the right.</p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ParameterPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,MAAM;AAEpD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAM;EAAEC;AAAM,CAAC,GAAGH,UAAU;AAO5B,MAAMI,cAA6C,GAAGA,CAAC;EACrDC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,MAAMC,gBAAgB,GAAG,CACvB;IACEC,GAAG,EAAE,QAAsC;IAC3CC,KAAK,EAAE,kBAAkB;IACzBC,KAAK,EAAEL,UAAU,CAACM,MAAM;IACxBC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE;EACP,CAAC,EACD;IACEL,GAAG,EAAE,wBAAsD;IAC3DC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAEL,UAAU,CAACS,sBAAsB;IACxCF,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,6BAA2D;IAChEC,KAAK,EAAE,kCAAkC;IACzCC,KAAK,EAAEL,UAAU,CAACW,2BAA2B;IAC7CJ,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,6BAA2D;IAChEC,KAAK,EAAE,kCAAkC;IACzCC,KAAK,EAAEL,UAAU,CAACY,2BAA2B;IAC7CL,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,4BAA0D;IAC/DC,KAAK,EAAE,iCAAiC;IACxCC,KAAK,EAAEL,UAAU,CAACa,0BAA0B;IAC5CN,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,0BAAwD;IAC7DC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAEL,UAAU,CAACc,wBAAwB;IAC1CP,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,0BAAwD;IAC7DC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAEL,UAAU,CAACe,wBAAwB;IAC1CR,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,EACD;IACEP,GAAG,EAAE,yBAAuD;IAC5DC,KAAK,EAAE,2BAA2B;IAClCC,KAAK,EAAEL,UAAU,CAACgB,uBAAuB;IACzCT,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNE,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEb,OAAA,CAACJ,IAAI;IAACwB,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC7CrB,OAAA,CAACC,KAAK;MAACqB,KAAK,EAAE,CAAE;MAACF,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAE9D1B,OAAA;MAAKoB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,GAClChB,gBAAgB,CAACsB,GAAG,CAAEC,MAAM,iBAC3B5B,OAAA;QAAsBoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC9CrB,OAAA;UAAOoB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEO,MAAM,CAACrB;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzD1B,OAAA,CAACH,WAAW;UACVuB,SAAS,EAAC,iBAAiB;UAC3BZ,KAAK,EAAEoB,MAAM,CAACpB,KAAM;UACpBqB,QAAQ,EAAGrB,KAAK,IAAKJ,iBAAiB,CAACwB,MAAM,CAACtB,GAAG,EAAEE,KAAK,IAAI,CAAC,CAAE;UAC/DE,GAAG,EAAEkB,MAAM,CAAClB,GAAI;UAChBC,GAAG,EAAEiB,MAAM,CAACjB,GAAI;UAChBE,IAAI,EAAEe,MAAM,CAACf,IAAK;UAClBiB,SAAS,EAAEF,MAAM,CAACf,IAAI,GAAG,CAAC,GAAG;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA,GAVME,MAAM,CAACtB,GAAG;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWf,CACN,CAAC,eAEF1B,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BrB,OAAA;UAAAqB,QAAA,EAAG;QAA4D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACK,EAAA,GAhGI7B,cAA6C;AAkGnD,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}