{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/WWW-Demo/frontend/src/pages/scenario1/Scenario1Page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, message } from 'antd';\nimport ConfigurationPanel from './ConfigurationPanel';\nimport VisualizationArea from './VisualizationArea';\nimport './Scenario1Page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Paragraph\n} = Typography;\nconst Scenario1Page = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [simulationResult, setSimulationResult] = useState(null);\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false);\n  const handleStartSimulation = async config => {\n    if (!config.strategy.content.trim()) {\n      message.warning('Please enter your PR strategy first');\n      return;\n    }\n    setIsLoading(true);\n    setSimulationResult(null);\n    try {\n      // 模拟API调用\n      await new Promise(resolve => setTimeout(resolve, 3000));\n\n      // 模拟结果\n      const mockResult = {\n        success: Math.random() > 0.5,\n        score: Math.floor(Math.random() * 40) + 60,\n        // 60-100\n        improvements: ['Consider addressing the emotional impact more directly', 'Add more specific data points to support your claims', 'Include a clear timeline for follow-up actions'],\n        networkData: {\n          nodes: Math.floor(Math.random() * 50) + 20,\n          connections: Math.floor(Math.random() * 100) + 50\n        }\n      };\n      setSimulationResult(mockResult);\n      message.success('Simulation completed successfully!');\n    } catch (error) {\n      message.error('Simulation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleGenerateReport = () => {\n    if (!simulationResult) {\n      message.warning('Please run a simulation first');\n      return;\n    }\n    message.info('Generating report...');\n  };\n  const handleReset = () => {\n    setSimulationResult(null);\n    message.success('Simulation reset');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scenario1-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"page-title\",\n        children: \"EchoChamber: A Simulator for Public Relations Crisis Dynamics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        className: \"page-description\",\n        children: \"Analyze public opinion propagation through multi-agent llm-based simulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-column\",\n          children: /*#__PURE__*/_jsxDEV(ConfigurationPanel, {\n            onStartSimulation: handleStartSimulation,\n            onGenerateReport: handleGenerateReport,\n            onReset: handleReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualization-column\",\n          children: /*#__PURE__*/_jsxDEV(VisualizationArea, {\n            isLoading: isLoading,\n            networkData: simulationResult === null || simulationResult === void 0 ? void 0 : simulationResult.networkData,\n            simulationResult: simulationResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Scenario1Page, \"lQuyex6h3fkcR+205q0ANVsk5QQ=\");\n_c = Scenario1Page;\nexport default Scenario1Page;\nvar _c;\n$RefreshReg$(_c, \"Scenario1Page\");","map":{"version":3,"names":["React","useState","Typography","message","ConfigurationPanel","VisualizationArea","jsxDEV","_jsxDEV","Title","Paragraph","Scenario1Page","_s","isLoading","setIsLoading","simulationResult","setSimulationResult","isDrawerVisible","setIsDrawerVisible","handleStartSimulation","config","strategy","content","trim","warning","Promise","resolve","setTimeout","mockResult","success","Math","random","score","floor","improvements","networkData","nodes","connections","error","handleGenerateReport","info","handleReset","className","children","level","fileName","_jsxFileName","lineNumber","columnNumber","onStartSimulation","onGenerateReport","onReset","_c","$RefreshReg$"],"sources":["/Users/bruce/WWW-Demo/frontend/src/pages/scenario1/Scenario1Page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Typography, message } from 'antd';\nimport ConfigurationPanel from './ConfigurationPanel';\nimport VisualizationArea from './VisualizationArea';\nimport StrategyRefinementDrawer from '../../components/StrategyRefinementDrawer';\nimport { SimulationConfig, SimulationParameters } from '../../types';\nimport './Scenario1Page.css';\n\nconst { Title, Paragraph } = Typography;\n\nconst Scenario1Page: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [simulationResult, setSimulationResult] = useState<any>(null);\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false);\n\n  const handleStartSimulation = async (config: SimulationConfig) => {\n    if (!config.strategy.content.trim()) {\n      message.warning('Please enter your PR strategy first');\n      return;\n    }\n\n    setIsLoading(true);\n    setSimulationResult(null);\n\n    try {\n      // 模拟API调用\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      \n      // 模拟结果\n      const mockResult = {\n        success: Math.random() > 0.5,\n        score: Math.floor(Math.random() * 40) + 60, // 60-100\n        improvements: [\n          'Consider addressing the emotional impact more directly',\n          'Add more specific data points to support your claims',\n          'Include a clear timeline for follow-up actions'\n        ],\n        networkData: {\n          nodes: Math.floor(Math.random() * 50) + 20,\n          connections: Math.floor(Math.random() * 100) + 50,\n        }\n      };\n\n      setSimulationResult(mockResult);\n      message.success('Simulation completed successfully!');\n    } catch (error) {\n      message.error('Simulation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGenerateReport = () => {\n    if (!simulationResult) {\n      message.warning('Please run a simulation first');\n      return;\n    }\n    message.info('Generating report...');\n  };\n\n  const handleReset = () => {\n    setSimulationResult(null);\n    message.success('Simulation reset');\n  };\n\n  return (\n    <div className=\"scenario1-page\">\n      <div className=\"page-header\">\n        <Title level={2} className=\"page-title\">\n          EchoChamber: A Simulator for Public Relations Crisis Dynamics\n        </Title>\n        <Paragraph className=\"page-description\">\n          Analyze public opinion propagation through multi-agent llm-based simulation.\n        </Paragraph>\n      </div>\n\n      <div className=\"page-content\">\n        <div className=\"content-grid\">\n          <div className=\"config-column\">\n            <ConfigurationPanel\n              onStartSimulation={handleStartSimulation}\n              onGenerateReport={handleGenerateReport}\n              onReset={handleReset}\n            />\n          </div>\n          <div className=\"visualization-column\">\n            <VisualizationArea\n              isLoading={isLoading}\n              networkData={simulationResult?.networkData}\n              simulationResult={simulationResult}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Scenario1Page;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}