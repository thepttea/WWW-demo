{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/WWW-Demo/frontend/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Card, Input, Button, Typography } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Paragraph\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst ChatInterface = ({\n  onStrategyGenerated\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: '1',\n    type: 'llm',\n    content: \"Hello! I'm here to help you craft the perfect PR strategy. Please describe the situation and your goals.\",\n    timestamp: new Date()\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: inputValue,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    // 模拟LLM响应\n    setTimeout(() => {\n      const llmMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'llm',\n        content: \"I understand. Let's work together to develop a comprehensive PR plan. We can explore various approaches, such as targeted communication, influencer engagement, and community outreach. What are your initial thoughts?\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, llmMessage]);\n      setIsLoading(false);\n    }, 1000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"chat-interface glassmorphism\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        className: \"chat-title\",\n        children: \"LLM Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n        className: \"chat-description\",\n        children: \"Interact with the LLM to refine your PR strategy. The final strategy will be used in the simulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          className: \"message-input\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          rows: 3,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"send-button\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this),\n          onClick: handleSendMessage,\n          disabled: !inputValue.trim() || isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"uPasEvimyu/EngLDG/e01YhfLw0=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","Input","Button","Typography","SendOutlined","ChatMessage","jsxDEV","_jsxDEV","Title","Paragraph","TextArea","ChatInterface","onStrategyGenerated","_s","messages","setMessages","id","type","content","timestamp","Date","inputValue","setInputValue","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","now","toString","prev","setTimeout","llmMessage","handleKeyPress","e","key","shiftKey","preventDefault","className","children","level","fileName","_jsxFileName","lineNumber","columnNumber","map","message","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled","icon","onClick","_c","$RefreshReg$"],"sources":["/Users/bruce/WWW-Demo/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Card, Input, Button, Typography } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport ChatMessage from './ChatMessage';\nimport { ChatMessage as ChatMessageType } from '../types';\nimport './ChatInterface.css';\n\nconst { Title, Paragraph } = Typography;\nconst { TextArea } = Input;\n\ninterface ChatInterfaceProps {\n  onStrategyGenerated: (strategy: string) => void;\n}\n\nconst ChatInterface: React.FC<ChatInterfaceProps> = ({ onStrategyGenerated }) => {\n  const [messages, setMessages] = useState<ChatMessageType[]>([\n    {\n      id: '1',\n      type: 'llm',\n      content: \"Hello! I'm here to help you craft the perfect PR strategy. Please describe the situation and your goals.\",\n      timestamp: new Date(),\n    },\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n\n    const userMessage: ChatMessageType = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: inputValue,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    // 模拟LLM响应\n    setTimeout(() => {\n      const llmMessage: ChatMessageType = {\n        id: (Date.now() + 1).toString(),\n        type: 'llm',\n        content: \"I understand. Let's work together to develop a comprehensive PR plan. We can explore various approaches, such as targeted communication, influencer engagement, and community outreach. What are your initial thoughts?\",\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, llmMessage]);\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <Card className=\"chat-interface glassmorphism\">\n      <div className=\"chat-header\">\n        <Title level={3} className=\"chat-title\">LLM Chat</Title>\n        <Paragraph className=\"chat-description\">\n          Interact with the LLM to refine your PR strategy. The final strategy will be used in the simulation.\n        </Paragraph>\n      </div>\n      \n      <div className=\"chat-messages\">\n        {messages.map((message) => (\n          <ChatMessage key={message.id} message={message} />\n        ))}\n        {isLoading && (\n          <div className=\"loading-message\">\n            <div className=\"loading-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input\">\n        <div className=\"input-container\">\n          <TextArea\n            className=\"message-input\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            rows={3}\n            disabled={isLoading}\n          />\n          <Button\n            className=\"send-button\"\n            type=\"primary\"\n            icon={<SendOutlined />}\n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isLoading}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}